buildscript {
  repositories {
    maven { url = "http://files.minecraftforge.net/maven" }
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
  }
}

apply plugin: 'net.minecraftforge.gradle'

version = "0.3.4"
group = "com.mushroom"
archivesBaseName = "themidnight"

sourceCompatibility = targetCompatibility = '1.8'

sourceSets {
  main {
    resources {
      srcDirs += "src/generated/resources"
    }
  }
}

minecraft {
  mappings channel: 'snapshot', version: '20190724-1.14.3'
  accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
  runs {
    client {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      mods {
        midnight {
          sources sourceSets.main
        }
      }
    }
    server {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      mods {
        midnight {
          sources sourceSets.main
        }
      }
    }
    data {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'

      args '--mod', 'midnight', '--all', '--output', file('src/generated/resources/')

      mods {
        midnight {
          source sourceSets.main
        }
      }
    }
  }
}

repositories {
  maven { url = "http://dvs1.progwml6.com/files/maven" }
}

dependencies {
  minecraft 'net.minecraftforge:forge:1.14.4-28.0.38'
  runtimeOnly fg.deobf("mezz.jei:jei-1.14.3:6.0.0.8")
  compileOnly fg.deobf("mezz.jei:jei-1.14.3:6.0.0.8:api")
}

jar {
  manifest {
    attributes([
        "Specification-Title"     : "midnight",
        "Specification-Vendor"    : "cryptic-mushroom",
        "Specification-Version"   : "1",
        "Implementation-Title"    : project.name,
        "Implementation-Version"  : "${version}",
        "Implementation-Vendor"   : "cryptic-mushroom",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
  }
}
